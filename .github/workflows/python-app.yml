# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  workflow_dispatch:
    inputs:
      name:
        type: choice
        description: Who to greet
        options: 
        - monalisa
        - cschleiden
      message:
        required: true
      use-emoji:
        type: boolean
        description: Include  emojis
      environment:
        type: environment
      target_env:
        type: choice
        description: "Environment to deploy to"
        required: true
        default: "nightly"
        options:
          - "dev"
          - "nightly"
          - "staging"
          - "testnet"
          - "prod"

        
env:
  TARGET_ENV: ${{ github.event.inputs.environment || 'nightly' }}

  
permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: set env variables
      working-directory: ./
      run: |
        case $TARGET_ENV in 
          dev)
            ENV_VAR_1="dev_1"
            ENV_VAR_2="dev_2"
            SEC_VAR= ${{ secrets.SECRET_KEY }}
          ;;
          qa)
            ENV_VAR_1="qa_1"
            ENV_VAR_2="qa_2"
            SEC_VAR= ${{ secrets.SECRET_KEY }}
          ;;
          *)
            echo >&2 "ERROR: the target environment '${TARGET_ENV}' is not supported"
            exit 1
          ;;
        esac
        echo "ENV_VAR_1=${ENV_VAR_1}" >> $GITHUB_ENV
        echo "ENV_VAR_2=${ENV_VAR_2}" >> $GITHUB_ENV
        echo "SEC_VAR=${SEC_VAR}" >> $GITHUB_ENV

    - name: validate params
      run: |
        echo $ENV_VAR_1
        echo $ENV_VAR_2
        echo $SEC_VAR
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: run shell script
      run: |
        echo "Hello world!"
        echo $TARGET_ENV
